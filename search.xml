<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo相关基础和配置</title>
    <url>/2025/05/11/Hexo%E7%9B%B8%E5%85%B3%E5%9F%BA%E7%A1%80%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="hexo的基本命令">Hexo的基本命令</h1>
<ul>
<li>创建制定布局的文章：<code>hexo new [layout] &lt;title&gt;</code>，其中layout参数的默认值是post。<br>
</li>
<li>将草稿类布局转换为post布局： <code>hexo publish</code> “草稿布局文章的标题”。<br>
</li>
<li>渲染，生成静态文件的文件夹public：<code>hexo generate</code>。</li>
<li>清理缓存和原先的public文件：<code>hexo clean</code>。</li>
<li>将public文件夹部署到远端：<code>hexo deploy</code>。</li>
</ul>
<h1 id="hexo的渲染器和mathjax">Hexo的渲染器和Mathjax</h1>
<p>先说结论，Hexo渲染器的作用是将Markdown转换为对应的HTML代码，而Mathjax的作用则是去解析HTML代码当中的数学公式并基于SVG或HTML+CSS将其转换为美观的数学公式。</p>
<p>Hexo的渲染器很多，这里就介绍hexo-renderer-pandoc。它实际上是Hexo的一个插件（用于调用Pandoc将Markdown转换为对应的html代码）。Hexo默认用的渲染器hexo-renderer-marked效果很糟糕，执行以下命令就可以将渲染器切换为hexo-renderer-pandoc。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-renderer-marked <span class="token parameter variable">--save</span>  <span class="token comment"># 移除默认渲染器</span>
<span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-pandoc <span class="token parameter variable">--save</span>    <span class="token comment"># 安装 Pandoc 渲染器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>MathJax 是一个开源的 JavaScript 库，用于在网页中高质量地解析并可视化数学公式。与kaTex相比Mathjax除了支持Latex的完整语法，还支持相关的拓展包语法。在Hexo根目录中添加以下配置就可以自己的博客完美地显示数学公式了！</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 支持公式</span>
<span class="token key atrule">pandoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">args</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">"--mathjax"</span>                   <span class="token comment"># 启用 MathJax 支持</span>
    <span class="token punctuation">-</span> <span class="token string">"--wrap=preserve"</span>             <span class="token comment"># 防止代码换行破坏公式</span>
  <span class="token key atrule">extensions</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">"+tex_math_dollars"</span>           <span class="token comment"># 允许 $...$ 行内公式</span>
    <span class="token punctuation">-</span> <span class="token string">"+raw_tex"</span>                    <span class="token comment"># 保留原始 LaTeX 代码</span>
<span class="token key atrule">mathjax</span><span class="token punctuation">:</span>
  <span class="token key atrule">tags</span><span class="token punctuation">:</span> none <span class="token comment"># or 'ams' or 'all'</span>
  <span class="token key atrule">single_dollars</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># enable single dollar signs as in-line math delimiters</span>
  <span class="token key atrule">cjk_width</span><span class="token punctuation">:</span> <span class="token number">0.9</span> <span class="token comment"># relative CJK char width</span>
  <span class="token key atrule">normal_width</span><span class="token punctuation">:</span> <span class="token number">0.6</span> <span class="token comment"># relative normal (monospace) width</span>
  <span class="token key atrule">append_css</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># add CSS to pages rendered by MathJax</span>
  <span class="token key atrule">every_page</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># if true, every page will be rendered by MathJax regardless the `mathjax` setting in Front-matter</span>
  <span class="token key atrule">packages</span><span class="token punctuation">:</span> <span class="token comment"># extra packages to load</span>
  <span class="token key atrule">extension_options</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment"># you can put your extension options here</span>
    <span class="token comment"># see http://docs.mathjax.org/en/latest/options/input/tex.html#tex-extension-options for more detail</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token equation string">$$
<span class="token equation-command regex">\begin</span>{align}
<span class="token equation-command regex">\sum</span>_{j<span class="token equation-command regex">\ne</span> i}x_{ij}=&amp;1&amp;,<span class="token equation-command regex">\forall</span> i <span class="token equation-command regex">\in</span> V<span class="token equation-command regex">\\</span>
<span class="token equation-command regex">\sum</span>_{i<span class="token equation-command regex">\ne</span> j}x_{ij}=&amp;1&amp;,<span class="token equation-command regex">\forall</span> j <span class="token equation-command regex">\in</span> V
<span class="token equation-command regex">\end</span>{align}
$$</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -5.035ex;" xmlns="http://www.w3.org/2000/svg" width="18.187ex" height="11.201ex" role="img" focusable="false" viewBox="0 -2725.3 8038.7 4950.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,1775.3)"><g data-mml-node="mtd" transform="translate(67,0)"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(179.3,-1123.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="mi" transform="translate(1190,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="msub" transform="translate(1610.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3078.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4134.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4634.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(5079.2,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></g><g data-mml-node="mi" transform="translate(5635.2,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6257.9,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(7202.7,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-850)"><g data-mml-node="mtd"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(179.3,-1123.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="mi" transform="translate(1123,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="msub" transform="translate(1610.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3078.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4134.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4634.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(5079.2,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></g><g data-mml-node="mi" transform="translate(5635.2,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(6324.9,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(7269.7,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g></g></g></g></g></svg></mjx-container></span></p>
<h1 id="category和tag的区别">category和tag的区别</h1>
<p>知乎用户鲁大荒对Categories和Tags的理解我感觉挺有道理：“Catagory是共性因素，Tag是个性因素；对使用者而言，前者是被动引导，后者是主动引导；前者有内部层级关系，后者没有内部层级关系；二者也有共性，可以互为转换，但catagory的量不宜过大，否则就失去了索引的意义和效果。”所以之后我的博客在categories上就计划分成五类：</p>
<ul>
<li>计算机技术</li>
<li>数学建模与运筹学</li>
<li>机器学习</li>
<li>生活</li>
<li>其它</li>
</ul>
<p>而tags就根据每篇文章的内容取一个或多个，让tags在文章所属的特定category下进一步凸显自身的特性。</p>
<h1 id="hexo中的路径问题">Hexo中的路径问题</h1>
<p>首先得讲一下路径分隔符<code>/</code>和<code>\</code>的区别。它俩都可以作为路径分隔符，但是在linux，macos和web和各种编程语言如python中不支持使用<code>\</code>作为路径分隔符，<del><font color="blue">python里面其实也可以用r取消转义…</font></del>所以平时写路径就最好用<code>/</code>作为分隔符，特别是在用hexo写博客的时候，如果不用<code>/</code>作为路径分隔符，你把博客deploy之后是看不到里面的图片的。</p>
<p>另一个需要注意的点就是public文件夹和source文件夹的结构不同，比如咱们正在写位于_posts文件夹下的subime这篇文章，然后咱想插入一张图片，一般来说咱会使用相对路径写成<code>./images/sublime.xxx.png</code>。但当你预览时会发现根本找不到这张图片！！！为什么？就是因为public文件夹和source文件夹结构不同。<font color="red">在写图片地址的时候必须得告诉浏览器怎么在public文件夹中找到对应的图片</font>，所以正确的写法可以是。</p>
<pre class="line-numbers language-markup" data-language="markup"><div class="caption"><span>从根路径开始找</span></div><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/images/sublime/2.png<span class="token punctuation">"</span></span> <span class="token attr-name">weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span><span class="token punctuation">/&gt;</span></span>
    Fig1. 创建项目 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-markup" data-language="markup"><div class="caption"><span>还是用相对路径</span></div><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../../../images/sublime/2.png<span class="token punctuation">"</span></span> <span class="token attr-name">weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span><span class="token punctuation">/&gt;</span></span>
    Fig1. 创建项目 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<div class="admonition info">
<p class="admonition-title">
相对路径表示
</p>
<ul>
<li>
<code>.</code>表示当前文件所处的目录
</li>
<li>
<code>..</code>表示当前文件所处目录的上一级目录
</li>
<li>
<code>/</code>表示的是根目录
</li>
</ul>
<p>
例如当前目录下有一个xxx.png，那么路径可以直接写成’xxx.png’,也可以写成’./xxx.png’
</p>
</div>
<pre class="line-numbers language-plain" data-language="plain"><div class="caption"><span>text source文件夹结构</span></div><code class="language-plain">D:.
├─abouts
├─archives
├─categories
├─datasets
├─images
│  ├─Deap源码学习
│  ├─Hexo相关基础和配置
│  ├─sublime
│  ├─子回路消除约束
│  ├─数据集
│  ├─海大的四季
│  ├─科研指南
│  └─顶部图
├─tags
├─_data
├─_drafts
└─_posts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-plain" data-language="plain"><div class="caption"><span>text public文件夹结构</span></div><code class="language-plain">D:.
├─2025
│  └─05
│      ├─05
│      │  └─海大的四季
│      ├─11
│      │  ├─Hexo相关基础和配置
│      │  └─Sublime
│      └─17
│          ├─Deap源码学习
│          ├─子回路消除约束
│          └─科研指南
├─abouts
├─archives
│  └─2025
│      └─05
├─categories
│  ├─数学建模与运筹学
│  ├─生活
│  ├─计算机技术
│  └─论文阅读
├─css
├─datasets
├─images
│  ├─Deap源码学习
│  ├─sublime
│  ├─子回路消除约束
│  ├─数据集
│  ├─海大的四季
│  ├─科研指南
│  └─顶部图
├─img
├─js
│  └─search
└─tags
    ├─Deap
    ├─Hexo
    ├─Sublime
    ├─TSP
    ├─VRP
    ├─大连海事大学
    ├─快捷键
    ├─景象照
    ├─研究生生涯规划
    ├─科研方法论
    └─遗传算法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="hexo部署报错">Hexo部署报错</h1>
<p><del><font color="red">解决方法是进入先.deploy_git文件夹,执行<code>git config --global core.autocrlf false</code>命令，然后在depoly就不会报错了。用这个方法还是会时不时报错</font></del>，于是又考虑将depoly中repo的设置从https协议转换成ssh协议——目前暂时没出过报错。</p>
<h1 id="性能优化">性能优化</h1>
<p>我的博客是部署在github上的，国内访问的速度非常慢。经过检查，页面加载时间主要是耗在了图片加载上，经过一番折腾最终使用gitHub提供的原始文件直链服务解决了这个问题。基本原理就是通过raw.githubusercontent.com的国内镜像raw.gitmirror.com绕过 gitHub页面渲染，直接返回文件的原始数据。这样做能提速的原理是gitHub在全球部署了内容分发网络（CDN），raw.gitmirror.com的请求会被路由到离用户最近的边缘节点，减少物理距离带来的延迟。</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/images/sublime/2.png<span class="token punctuation">"</span></span> <span class="token attr-name">weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span><span class="token punctuation">/&gt;</span></span>  # 一般写法
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/sublime/2.png<span class="token punctuation">"</span></span> <span class="token attr-name">weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>50%<span class="token punctuation">'</span></span><span class="token punctuation">/&gt;</span></span> # 使用直链服务的写法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>除了使用直链服务加速，还可以直接通过对图片进行压缩来提速，例如将图片转换为webp格式或将默认的jsdelivr的CDN切换成<a href="https://jsd-proxy.ygxz.in/index.html">国内镜像</a>或其它CDN服务。</p>
</blockquote>
<h1 id="参考资料">参考资料</h1>
<ol type="1">
<li><a href="https://blog.csdn.net/CQG1988/article/details/101652805">利用直链服务加速图像</a></li>
<li><a href="https://blog.zhheo.com/p/128998ac.html">Hexo部署报错处理思路</a></li>
<li><a href="https://blog.zhheo.com/p/790087d9.html">切换CDN服务</a></li>
</ol>
]]></content>
      <categories>
        <category>计算机技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime</title>
    <url>/2025/05/11/Sublime/</url>
    <content><![CDATA[<h1 id="snippet效率神器">Snippet效率神器</h1>
<p>Sublime的这个功能真的是强！强！强！能省不少时间。比如我就不太熟悉html的语法，但是写博客总得插入一些图片，而要想把图片排版好就必须得写html，有了snippet，这简直就不是事儿。snippet字如其义，就是插入一个小片段，比如说我有两张图需要并排，我就可以设置如下的snippet，通过输入<code>insert images</code>再按tab键的方式快速插入对应的html代码，完成排版工作。其中<code>${1:}</code>这样的表达是占位符，前面的数字是跳转顺序，当你填完一处之后按tab键就可以跳转到下一处。</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snippet</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>content</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;
			&lt;center&gt;
				&lt;img src=${1:src}/&gt;
				Fig1. ${2:Title}
			&lt;/center&gt;
		&lt;/td&gt;
		&lt;td&gt;
			&lt;center&gt;
				&lt;img src=${3:src}/&gt;
				Fig2. ${4:Title}
			&lt;/center&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>content</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tabTrigger</span><span class="token punctuation">&gt;</span></span>insert images<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tabTrigger</span><span class="token punctuation">&gt;</span></span>
	<span class="token comment">&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span>
	<span class="token comment">&lt;!-- &lt;tabTrigger&gt;hello&lt;/tabTrigger&gt; --&gt;</span>
	<span class="token comment">&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span>
	<span class="token comment">&lt;!-- &lt;scope&gt;source.python&lt;/scope&gt; --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snippet</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="常用快捷键">常用快捷键</h1>
<table>
<colgroup>
<col style="width: 21%">
<col style="width: 39%">
<col style="width: 39%">
</colgroup>
<thead>
<tr>
<th>分类</th>
<th>功能</th>
<th>快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td>通用操作</td>
<td>打开命令面板</td>
<td><code>Ctrl + Shift + P</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>新建python文件</td>
<td><code>Ctrl + Alt + Shift + P</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>新建文件</td>
<td><code>Ctrl + N</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>保存文件</td>
<td><code>Ctrl + S</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>另存为</td>
<td><code>Ctrl + Shift + S</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>打开文件</td>
<td><code>Ctrl + O</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>切换项目</td>
<td><code>Alt + shift + P</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>关闭当前标签页</td>
<td><code>Ctrl + W</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>关闭所有标签页</td>
<td><code>Ctrl + Shift + W</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>切换全屏模式</td>
<td><code>Fn + F11</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>切换侧边栏显示/隐藏</td>
<td><code>Ctrl + K + B</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>build当前文件（运行）</td>
<td><code>Ctrl + B</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>显示build结果</td>
<td><code>Shift + Esc</code></td>
</tr>
<tr>
<td>通用操作</td>
<td>隐藏build结果</td>
<td><code>Esc</code></td>
</tr>
<tr>
<td>导航与跳转</td>
<td>快速跳转文件</td>
<td><code>Ctrl + P</code></td>
</tr>
<tr>
<td>导航与跳转</td>
<td>跳转到指定行号</td>
<td><code>Ctrl + G</code></td>
</tr>
<tr>
<td>导航与跳转</td>
<td>跳转到符号（函数/类）</td>
<td><code>Ctrl + R</code></td>
</tr>
<tr>
<td>导航与跳转</td>
<td>返回上一个光标位置</td>
<td><code>Ctrl + -</code></td>
</tr>
<tr>
<td>导航与跳转</td>
<td>前进到下一个光标位置</td>
<td><code>Ctrl + Shift + -</code></td>
</tr>
<tr>
<td>导航与跳转</td>
<td>跳转到匹配括号</td>
<td><code>Ctrl + M</code></td>
</tr>
<tr>
<td>导航与跳转</td>
<td>跳转到行首行尾</td>
<td><code>Fn + Home</code> / <code>Fn + End</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>复制当前行</td>
<td><code>Ctrl + Shift + D</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>删除当前行</td>
<td><code>Ctrl + Shift + K</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>合并多行</td>
<td><code>Ctrl + Shift + J</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>行缩进</td>
<td><code>Ctrl + ]</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>行取消缩进</td>
<td><code>Ctrl + [</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>注释/取消注释</td>
<td><code>Ctrl + /</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>批量重命名所选内容</td>
<td><code>Ctrl + D</code>（多次按）</td>
</tr>
<tr>
<td>编辑操作</td>
<td>撤销操作</td>
<td><code>Ctrl + Z</code></td>
</tr>
<tr>
<td>编辑操作</td>
<td>粘贴并自动缩进</td>
<td><code>Ctrl + Shift + V</code></td>
</tr>
<tr>
<td>选择与多光标</td>
<td>扩展选区（词→行→块）</td>
<td><code>Ctrl + D</code> → <code>Ctrl + L</code> → <code>Ctrl + A</code></td>
</tr>
<tr>
<td>选择与多光标</td>
<td>竖向多光标选择</td>
<td><code>Ctrl + Alt + ↑/↓</code></td>
</tr>
<tr>
<td>搜索与替换</td>
<td>查找</td>
<td><code>Ctrl + F</code></td>
</tr>
<tr>
<td>搜索与替换</td>
<td>替换</td>
<td><code>Ctrl + H</code></td>
</tr>
<tr>
<td>搜索与替换</td>
<td>全局搜索（多文件）</td>
<td><code>Ctrl + Shift + F</code></td>
</tr>
<tr>
<td>窗口与标签页</td>
<td>切换标签页</td>
<td><code>Ctrl + Tab</code></td>
</tr>
<tr>
<td>自定义快捷键</td>
<td>终止build</td>
<td><code>Ctrl + Shift + C</code></td>
</tr>
<tr>
<td>自定义快捷键</td>
<td>进入交互式界面</td>
<td><code>Ctrl + Alt + Shift + I</code></td>
</tr>
<tr>
<td>自定义快捷键</td>
<td>在交互式界面运行当前程序</td>
<td><code>Ctrl + Alt + Shift + R</code></td>
</tr>
<tr>
<td>自定义快捷键</td>
<td>在交互式界面调试当前程序（需设置断点）</td>
<td><code>Ctrl + Alt + Shift + D</code></td>
</tr>
</tbody>
</table>
<h1 id="sublime的project功能">Sublime的project功能</h1>
<p>Sublime的这个功能也是蛮好用的，可以把一个文件夹另存为一个project，然后通过快捷键<code>alt+shift+p</code>就可以在这些project间实现快速切换。比如我平时就是写代码和写博客的需求，我就分别创建一个代码project和一个博客project。</p>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/sublime/2.webp" weight="50%" height="50%">
Fig1. 创建项目
</center>
<h1 id="sublime-repl插件">Sublime REPL插件</h1>
<p>SublimeREPL 是一个 Sublime Text 插件，允许用户在编辑器内直接运行交互式编程环境（REPL，Read-Eval-Print Loop）。还可以使用python自带的PDB（python debugger）调试代码。</p>
<pre class="line-numbers language-none"><div class="caption"><span>设置sublime repl的快捷键</span></div><code class="language-none">[  // 进入交互式界面
    {
        "keys":["ctrl+alt+shift+i"],
        "caption": "SublimeREPL: Python - IPython",
        "command": "run_existing_window_command",
        "args":
            {
                "id": "repl_python_ipython",
                "file": "C:/Users/sheyu/AppData/Roaming/Sublime Text/Packages/SublimeREPL/config/Python/Main.sublime-menu"
            }
    },
    // 通过交互式界面运行当前程序
    {
        "keys":["ctrl+alt+shift+r"],
        "caption": "SublimeREPL: Python - RUN current file",
        "command": "run_existing_window_command",
        "args":
        {
        "id": "repl_python_run",
        "file": "C:/Users/sheyu/AppData/Roaming/Sublime Text/Packages/SublimeREPL/config/Python/Main.sublime-menu"
        }
    },
    // pdb是python debugger的缩写，在交互式界面调试当前程序
    {
    "keys": ["ctrl+alt+shift+d"],
    "caption": "SublimeREPL: Python - PDB current file",
    "command": "run_existing_window_command",
    "args": {
        "id": "repl_python_pdb",
        "file": "C:/Users/sheyu/AppData/Roaming/Sublime Text/Packages/SublimeREPL/config/Python/Main.sublime-menu"}
    },
]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div class="admonition info">
<p class="admonition-title">
使用pdb调试代码的基本命令
</p>
<ul>
<li>
b：查看所有以及设置的断点。
</li>
<li>
b linenume：在linenum行设置一个断点。
</li>
<li>
cl linenum：删除linenum处的断点。
</li>
<li>
condition linenum cond：当cond满足时linenum行的断点才启用。
</li>
<li>
r：运行到下一处断点（不包括该断点对应行）。如果没有设置断点，就运行到最后一行（不包含最后一行）。
</li>
<li>
unt linenum：运行到linenum行（不包含）或遇到断点。
</li>
<li>
n：运行当前所在行，不进入函数内部。
</li>
<li>
s：运行当前行，进入函数内部。
</li>
<li>
j linenum：跳到linenum行，不执行。
</li>
<li>
p x：查看变量x的取值。
</li>
</ul>
</div>
<h1 id="sublime的sublime-tmpl插件">Sublime的Sublime Tmpl插件</h1>
<p>SublimeTmpl能新建html、css、javascript、php、python、ruby六种类型的文件模板，所有的文件模板都在插件目录的templates文件夹里，可以自定义编辑文件模板。</p>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/sublime/3.webp" weight="50%" height="50%">
Fig2. sublime tmpl的模板文件
</center>
]]></content>
      <categories>
        <category>计算机技术</category>
      </categories>
      <tags>
        <tag>Sublime</tag>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>Deap源码学习</title>
    <url>/2025/05/17/Deap%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="base模块">base模块</h1>
<h2 id="toolbox类">Toolbox类</h2>
<p>Toolbox类是用来管理算子的，包含如下属性和方法：</p>
<ul>
<li>clone属性：对应的就是deepcopy函数。</li>
<li>map属性：对应的就是map函数。</li>
<li>register方法：这个方法是用来给Toolbox类添加属性（这个属性的值是函数）的。实现的关键使用了functool的partial函数，这个函数的作用是去将函数的部分参数给固定住。</li>
<li>unregister方法：和register方法对应的方法，就是将制定名称的属性删除。</li>
<li>decorate方法：就是将register得到的属性对应的函数用指定装饰器装饰。</li>
</ul>
<h2 id="fitness类">Fitness类</h2>
<p>Fitness类是用来管理个体的适应度值的，包含以下属性和方法：</p>
<ul>
<li>weights属性：Fitness类是不能直接使用的，必须创建它的子类，并且在创建Fitness类子类的过程中确定好weights属性。在设计上要求weights属性必须是一个元组，这时为了处理多目标的情形。
如果我们把values理解成个体在各个目标下对应的目标值，那么weights的作用就是将目标函数标定为适应度值wvalues。对于最小化问题，weights对应位置元素应该设置为负数，对于最大化问题weights
对应位置应该设置为正数，这样无论是最大化还是最小化目标函数，一个的好坏都可以通过判断wvalues是否更大得出。</li>
<li>wvalues属性：设计上wvalues同样是一个元组，可以理解成各个目标标定后的适应度值，wvalues中的元素都是越大说明个体越好，这个属性会在设置values属性的时候被计算。</li>
<li>values属性：设计上values同样是一个元组，并且大小和weight、wvalues属性应该匹配。可以理解为个体在各个目标下对应的目标值。</li>
<li>valid属性：valid本身是一个方法，通过property装饰成为了一个属性，用于检查Fitness的实例的wvalues属性是不是空的。</li>
<li>dominate方法：通过比较wvalues参数对应的每一个元素来检查两个Fitness实例的优良关系。当且仅当第一个实例的wvalues中每一个元素都不严格小于的第二个实例的wvalues对应元素且至少有一个元素严格大于时才返回真。</li>
<li>各种关系运算符对应的魔术方法：这里就是实现的逻辑时对Fitness类的wvalues属性进行大小比较。由于wvalues是元组，所以比较规则和元组之间的关系运算是一样的。</li>
<li>用于显示的魔术方法</li>
</ul>
<h2 id="constrainedfitness类">ConstrainedFitness类</h2>
<p>这个类是Fitness类的子类，它是在Fitness类的基础上新增了一个交constraint_violation的实例属性，并重载了关系运算符的比较规则。</p>
<hr>
<h1 id="creator模块">creator模块</h1>
<p>这个模块的实现很有技术含量，但关键其实就是它里面的create函数，这个函数的功能是继承某个类并设置相应的类属性和实例属性得到一个新的类。这里属性的设置规则是，如果传递给create的参数是一个类，那么就会使用这个类创建一个实例属性，如果传递给create的参数是某个类的实例，那么就会创建对应的类属性。</p>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>create函数工作原理浅析</span></div><code class="language-python">create<span class="token punctuation">(</span><span class="token string">'Class2'</span><span class="token punctuation">,</span>Class1<span class="token punctuation">,</span>param1<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">,</span>param2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等价于。</p>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>create函数工作原理浅析</span></div><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Class2</span><span class="token punctuation">(</span>Class1<span class="token punctuation">)</span><span class="token punctuation">:</span>
  params2 <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 因为1是int类的实例，所以Class2类新添了一个类属性</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>param1 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 因为dict是一个类，所以Class2使用dict添加了一个实例属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h1 id="tools模块">tools模块</h1>
<p>这个tools模块下边实际上还有非常多的子模块，不过作者已经在__init__模块中提前导入这些模块了，所以我们用tool模块的时候就写个import tools就可以用tools模块下的所有子模块了。</p>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>tools模块下的__init__.py文件</span></div><code class="language-python"><span class="token keyword">from</span> <span class="token punctuation">.</span>constraint <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>crossover <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>emo <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>indicator <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>init <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>migration <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>mutation <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>selection <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> <span class="token punctuation">.</span>support <span class="token keyword">import</span> <span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="selection子模块">selection子模块</h2>
<p>这个模块里面定义了常见的选择算子，由于选择后得到的交配池中可能有同样的父代个体，而交叉和编译算子都是就地操作，所以选择操作完了之后必须有Toolbox类的克隆方法深拷贝一下交配池中的每一个个体。</p>
<table>
<colgroup>
<col style="width: 22%">
<col style="width: 15%">
<col style="width: 44%">
<col style="width: 17%">
</colgroup>
<thead>
<tr>
<th>算子名称</th>
<th>选择策略</th>
<th>描述</th>
<th>适用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>selRandom</code></td>
<td>随机选择</td>
<td>完全随机选择个体，无任何偏好</td>
<td>基线对比/多样性保持</td>
</tr>
<tr>
<td><code>selBest</code></td>
<td>精英选择</td>
<td>直接选择适应度最高的前N个个体</td>
<td>保留最优解</td>
</tr>
<tr>
<td><code>selWorst</code></td>
<td>反向选择</td>
<td>选择适应度最差的个体（常用于特殊用途）</td>
<td>异常检测/反向优化</td>
</tr>
<tr>
<td><code>selRoulette</code></td>
<td>轮盘赌选择</td>
<td>按适应度比例的概率选择（适应度越高选中概率越大）</td>
<td>传统遗传算法</td>
</tr>
<tr>
<td><code>selTournament</code></td>
<td>锦标赛选择</td>
<td>随机选取K个个体竞争，选择其中最优的</td>
<td>通用场景/平衡选择压力</td>
</tr>
<tr>
<td><code>selDoubleTournament</code></td>
<td>双锦标赛选择</td>
<td>两阶段锦标赛：先按大小选择，再按适应度选择</td>
<td>多目标优化/兼顾多样性与收敛</td>
</tr>
<tr>
<td><code>selStochasticUniversalSampling</code></td>
<td>随机通用采样(SUS)</td>
<td>改进的轮盘赌，单轮均匀采样多个个体</td>
<td>减少轮盘赌的随机偏差</td>
</tr>
<tr>
<td><code>selLexicase</code></td>
<td>字典序选择</td>
<td>按随机测试用例顺序筛选，适合多准则优化</td>
<td>程序合成/符号回归</td>
</tr>
<tr>
<td><code>selEpsilonLexicase</code></td>
<td>ε-字典序选择</td>
<td>Lexicase的宽松版本，允许ε误差范围内的个体通过</td>
<td>噪声环境下的多目标优化</td>
</tr>
<tr>
<td><code>selAutomaticEpsilonLexicase</code></td>
<td>自适应ε-字典序选择</td>
<td>自动调整ε阈值的Lexicase变体</td>
<td>动态环境优化</td>
</tr>
</tbody>
</table>
<h2 id="crossover子模块">crossover子模块</h2>
<p>这个模块里边定义了常见的交叉算子，这些算子的一大特点就是就地操作。</p>
<table>
<colgroup>
<col style="width: 25%">
<col style="width: 9%">
<col style="width: 56%">
<col style="width: 8%">
</colgroup>
<thead>
<tr>
<th>算子名称</th>
<th>类型</th>
<th>描述</th>
<th>状态</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>cxOnePoint</code></td>
<td>单点交叉</td>
<td>在随机选择的一个位置切割两个父代染色体并交换片段</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxTwoPoint</code></td>
<td>两点交叉</td>
<td>在随机选择的两点位置切割并交换中间片段</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxUniform</code></td>
<td>均匀交叉</td>
<td>按概率逐个基因交换（类似遗传算法的均匀交叉）</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxPartialyMatched</code> (PMX)</td>
<td>部分匹配</td>
<td>保持排列有效性的部分匹配交叉，适用于TSP问题</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxUniformPartialyMatched</code></td>
<td>均匀PMX</td>
<td>PMX的均匀交叉变种</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxOrdered</code> (OX)</td>
<td>顺序交叉</td>
<td>保持相对顺序的顺序交叉，适用于排列编码</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxBlend</code></td>
<td>混合交叉</td>
<td>对实值编码进行线性混合（α-混合）</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxSimulatedBinary</code> (SBX)</td>
<td>模拟二进制</td>
<td>模拟二进制交叉的实值编码方法</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxSimulatedBinaryBounded</code></td>
<td>有界SBX</td>
<td>带边界约束的SBX变种</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxMessyOnePoint</code></td>
<td>乱序单点</td>
<td>允许不等长基因组的单点交叉</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxESBlend</code></td>
<td>ES混合</td>
<td>进化策略专用的混合交叉</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxESTwoPoint</code></td>
<td>ES两点</td>
<td>进化策略专用的两点交叉</td>
<td>活跃</td>
</tr>
<tr>
<td><code>cxTwoPoints</code> (旧名)</td>
<td>两点交叉</td>
<td><code>cxTwoPoint</code> 的旧命名（功能相同）</td>
<td><strong>已弃用</strong></td>
</tr>
<tr>
<td><code>cxESTwoPoints</code> (旧名)</td>
<td>ES两点</td>
<td><code>cxESTwoPoint</code> 的旧命名（功能相同）</td>
<td><strong>已弃用</strong></td>
</tr>
</tbody>
</table>
<h2 id="mutation子模块">mutation子模块</h2>
<p>这个模块里边定义了常见的编译算子，这些算子的一大特点还是就地操作。</p>
<table>
<colgroup>
<col style="width: 18%">
<col style="width: 14%">
<col style="width: 49%">
<col style="width: 18%">
</colgroup>
<thead>
<tr>
<th>算子名称</th>
<th>适用编码类型</th>
<th>描述</th>
<th>典型应用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>mutGaussian</code></td>
<td>实值编码</td>
<td>高斯（正态分布）变异，添加均值为0的随机噪声</td>
<td>连续优化问题</td>
</tr>
<tr>
<td><code>mutPolynomialBounded</code></td>
<td>实值编码（边界约束）</td>
<td>多项式变异，保持解在边界范围内</td>
<td>有约束的实数优化</td>
</tr>
<tr>
<td><code>mutShuffleIndexes</code></td>
<td>排列编码</td>
<td>随机打乱部分基因的位置</td>
<td>TSP/调度等排列问题</td>
</tr>
<tr>
<td><code>mutFlipBit</code></td>
<td>二进制编码</td>
<td>按概率翻转位值（0↔︎1）</td>
<td>二进制/布尔型基因</td>
</tr>
<tr>
<td><code>mutUniformInt</code></td>
<td>整数编码</td>
<td>在指定范围内用均匀分布随机生成新整数值</td>
<td>离散整数优化</td>
</tr>
<tr>
<td><code>mutInversion</code></td>
<td>排列编码</td>
<td>反转染色体中选定区间的基因顺序</td>
<td>保持排列有效性的变异</td>
</tr>
<tr>
<td><code>mutESLogNormal</code></td>
<td>进化策略(ES)</td>
<td>对数正态分布变异，常用于ES算法的策略参数更新</td>
<td>进化策略的自适应变异</td>
</tr>
</tbody>
</table>
<h2 id="init子模块">init子模块</h2>
<p>这个模块比较简单，包含3个函数。</p>
<ul>
<li>initRepeat：重复调用某个函数填充一个容器对象。</li>
<li>initIterate：调用一个返回可迭代对象的函数填充一个容器对象。</li>
<li>initCircle：重复依次调用一个函数序列中的每个函数填充一个容器对象。</li>
</ul>
<h2 id="support子模块">support子模块</h2>
<h3 id="history类">History类</h3>
<p>这个类可以用来存储遗传算法运行过程中产生的所有个体，并记录每个个体对应的父代，还可以配合networkx库绘制家谱图。</p>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/Deap源码学习/家谱图.webp" width="50%" height="50%">
Fig 1. 配合networx绘制家谱图
</center>
<h3 id="statistics类">Statistics类</h3>
<p>这个类可以看作是一个统计工具，比如可以用它来统计遗传算法运行过程中每一代的平均适应度和最大适应度。这个类包含如下属性和方法：</p>
<ul>
<li>key属性：这个属性对应的是一个函数，用于对统计对象做预处理，默认情况下是不处理。</li>
<li>functions属性：这个属性是一个字典，存放的是在Statistics类实例注册的函数。</li>
<li>fields属性：实际上就是functions属性调用keys()函数的返回值。</li>
<li>register方法：这个方法的实现逻辑和Toolbox类的register方法实现逻辑一样。</li>
<li>compile方法：输入统计对象，这个方法会用key对统计对象先做一遍预处理，处理完之后依次调用被注册的函数，并把结果写到一个字典里面并返回。</li>
</ul>
<h3 id="multistatistics类">MultiStatistics类</h3>
<p>这个类是dict类的子类，它用于一次性创建多个具有不同预处理方式的Statistcs类，并提供了相应的register和compile方法，实际上，多次使用Statiscs类也能实现相同的效果。</p>
<h3 id="logbook类">Logbook类</h3>
<p>Logbook类是lits类的子类，这个类用于在遗传算法中记录Statistics类得出的统计信息，并提供了对应的格式化输出。这个类包含如下属性和方法：</p>
<ul>
<li>headers属性：字符串（这些字符串前提是得）的列表，用于设置所展示信息的顺序，例如[‘gen’,‘max’,‘avg’]表示第一列展示gen，第二列展示max，第三列展示avg。</li>
<li>log_header属性：bool值。用于控制使用Logbook类的stream或__str__格式化输出记录结果时是否要输出标题行，也就是headers。</li>
<li>record方法：简单将这个方法就是将输入的关键字参数彻底展开，整理成一个字典，然后再把这个字典存到Logbook类的实例（列表）中。</li>
<li>select方法：这个方法和record方法相对，是将Logbook中所有指定键对应的值存到列表中返回，如果有多个指定键就返回一个列表元组。</li>
<li>stream方法：格式化输出Logbook中存储的一次迭代的信息（对应一个字典），如果log_header为true，则第一次调用stream方法输出的是headers的格式化字符串。</li>
<li>__txt__方法：这个方法是为stream方法和__str__方法服务的，实现比较复杂，但简单讲就是在讲信息格式化为字符串。</li>
<li>__str__方法：这个方法再调用print函数是将直接把Logbook中的所有信息给格式化输出出来，如果log_header为true，第一行回事headers的格式化输出结果。</li>
</ul>
<h3 id="halloffame类">HallOfFame类</h3>
<p>HallOfFame类的作用有点类似与gurobi当中的解池塘，它的主要属性和方法是：</p>
<ul>
<li>maxsize属性：设置解池的大小。</li>
<li>update方法：传递当前的种群，用于更新HallOfFame的实例，实例中的个体会按照适应度值的优劣进行排序，fitness最好的个体会被放到HallOfFame的实例（一个可迭代对象）的最左边。</li>
<li>remove方法：溢出某个个体。</li>
<li>clear方法：清空HallOfFame实例。</li>
</ul>
<hr>
<h1 id="algorithms模块">algorithms模块</h1>
<h2 id="varand函数">varAnd函数</h2>
<p>这个函数是用来做遗传运算的，关键需要注意以下几点：</p>
<ul>
<li>输入的population应该是经过选择操作得到的交配池，并且调用这个函数前不需要做深拷贝操作，这个函数会帮我们做。</li>
<li>输入的toolbox类实例对alias是有要求的，对于交叉操作alias要设置为mate，对于变异操作alias要设置成mutate。</li>
<li>这个函数内部已经帮我们删除发生variation的个体的fitness属性了。</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>varAnd函数源码</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">varAnd</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span> toolbox<span class="token punctuation">,</span> cxpb<span class="token punctuation">,</span> mutpb<span class="token punctuation">)</span><span class="token punctuation">:</span>
    offspring <span class="token operator">=</span> <span class="token punctuation">[</span>toolbox<span class="token punctuation">.</span>clone<span class="token punctuation">(</span>ind<span class="token punctuation">)</span> <span class="token keyword">for</span> ind <span class="token keyword">in</span> population<span class="token punctuation">]</span> <span class="token comment"># 深拷贝一下交配池</span>

    <span class="token comment"># Apply crossover and mutation on the offspring</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>offspring<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> cxpb<span class="token punctuation">:</span>
            offspring<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> offspring<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> toolbox<span class="token punctuation">.</span>mate<span class="token punctuation">(</span>offspring<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                                                          offspring<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">del</span> offspring<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fitness<span class="token punctuation">.</span>values<span class="token punctuation">,</span> offspring<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fitness<span class="token punctuation">.</span>values <span class="token comment"># 后代已经改变了，删掉对应的fitness属性</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>offspring<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> mutpb<span class="token punctuation">:</span>
            offspring<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">=</span> toolbox<span class="token punctuation">.</span>mutate<span class="token punctuation">(</span>offspring<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">del</span> offspring<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fitness<span class="token punctuation">.</span>values <span class="token comment"># 后代已经改变了，删掉对应的fitness属性</span>

    <span class="token keyword">return</span> offspring<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="essimple函数">esSimple函数</h2>
<p>eaSimple函数实现了最基础的遗传算法，关键需要注意以下几点：</p>
<ul>
<li>输入的population是初始化种群，默认没有计算适应度值，eaSimple函数会帮我们做。</li>
<li>toolbox的alias是有要求的，选择是select，交叉是mate，变异是mutate，计算目标函数值是evaluate。</li>
<li>verbose参数控制的是要不要在运行过程中格式化输出Logbook类对象的记录结果。</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>eaSimple函数源码</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">eaSimple</span><span class="token punctuation">(</span>population<span class="token punctuation">,</span> toolbox<span class="token punctuation">,</span> cxpb<span class="token punctuation">,</span> mutpb<span class="token punctuation">,</span> ngen<span class="token punctuation">,</span> stats<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
             halloffame<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span>__debug__<span class="token punctuation">)</span><span class="token punctuation">:</span>

    logbook <span class="token operator">=</span> tools<span class="token punctuation">.</span>Logbook<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 创建Logbook实例，用于record用Statitics类计算得到的各代统计信息，并展示格式化输出结果</span>
    logbook<span class="token punctuation">.</span>header <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'gen'</span><span class="token punctuation">,</span> <span class="token string">'nevals'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>stats<span class="token punctuation">.</span>fields <span class="token keyword">if</span> stats <span class="token keyword">else</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 设置Logbook格式化输出信息的标题行顺序</span>

    <span class="token comment"># Evaluate the individuals with an invalid fitness</span>
    invalid_ind <span class="token operator">=</span> <span class="token punctuation">[</span>ind <span class="token keyword">for</span> ind <span class="token keyword">in</span> population <span class="token keyword">if</span> <span class="token keyword">not</span> ind<span class="token punctuation">.</span>fitness<span class="token punctuation">.</span>valid<span class="token punctuation">]</span> <span class="token comment"># 输入的是初始化种群，他这里假设的是个体都的fitness属性都还是空的</span>
    fitnesses <span class="token operator">=</span> toolbox<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>toolbox<span class="token punctuation">.</span>evaluate<span class="token punctuation">,</span> invalid_ind<span class="token punctuation">)</span> <span class="token comment"># 计算目标函数值</span>
    <span class="token keyword">for</span> ind<span class="token punctuation">,</span> fit <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>invalid_ind<span class="token punctuation">,</span> fitnesses<span class="token punctuation">)</span><span class="token punctuation">:</span>
        ind<span class="token punctuation">.</span>fitness<span class="token punctuation">.</span>values <span class="token operator">=</span> fit <span class="token comment"># 设置values属性的时候就自动计算wvalues了</span>

    <span class="token keyword">if</span> halloffame <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        halloffame<span class="token punctuation">.</span>update<span class="token punctuation">(</span>population<span class="token punctuation">)</span> <span class="token comment"># 更新名人堂</span>

    record <span class="token operator">=</span> stats<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>population<span class="token punctuation">)</span> <span class="token keyword">if</span> stats <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment"># 如果给了Statistics对象就用Statistics对象统计得到一个字典。算”当前一代“的统计信息</span>
    logbook<span class="token punctuation">.</span>record<span class="token punctuation">(</span>gen<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> nevals<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>invalid_ind<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">**</span>record<span class="token punctuation">)</span> <span class="token comment"># 使用Logbook对象将record记录起来</span>
    <span class="token keyword">if</span> verbose<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>logbook<span class="token punctuation">.</span>stream<span class="token punctuation">)</span>  <span class="token comment"># 这里就是打印标题头</span>

    <span class="token comment"># Begin the generational process</span>
    <span class="token keyword">for</span> gen <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> ngen <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Select the next generation individuals </span>
        offspring <span class="token operator">=</span> toolbox<span class="token punctuation">.</span>select<span class="token punctuation">(</span>population<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>population<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 选择</span>

        <span class="token comment"># Vary the pool of individuals</span>
        offspring <span class="token operator">=</span> varAnd<span class="token punctuation">(</span>offspring<span class="token punctuation">,</span> toolbox<span class="token punctuation">,</span> cxpb<span class="token punctuation">,</span> mutpb<span class="token punctuation">)</span> <span class="token comment"># 遗传运算，交叉和变异</span>

        <span class="token comment"># Evaluate the individuals with an invalid fitness</span>
        invalid_ind <span class="token operator">=</span> <span class="token punctuation">[</span>ind <span class="token keyword">for</span> ind <span class="token keyword">in</span> offspring <span class="token keyword">if</span> <span class="token keyword">not</span> ind<span class="token punctuation">.</span>fitness<span class="token punctuation">.</span>valid<span class="token punctuation">]</span> <span class="token comment"># 使用varAnd做交叉和变异会自动将发生变化的个体的fitness属性置为空，通过列表推导找到这个个体，补上fitness属性</span>
        fitnesses <span class="token operator">=</span> toolbox<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>toolbox<span class="token punctuation">.</span>evaluate<span class="token punctuation">,</span> invalid_ind<span class="token punctuation">)</span>
        <span class="token keyword">for</span> ind<span class="token punctuation">,</span> fit <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>invalid_ind<span class="token punctuation">,</span> fitnesses<span class="token punctuation">)</span><span class="token punctuation">:</span>
            ind<span class="token punctuation">.</span>fitness<span class="token punctuation">.</span>values <span class="token operator">=</span> fit

        <span class="token comment"># Update the hall of fame with the generated individuals</span>
        <span class="token keyword">if</span> halloffame <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            halloffame<span class="token punctuation">.</span>update<span class="token punctuation">(</span>offspring<span class="token punctuation">)</span><span class="token comment"># 更新名人堂</span>

        <span class="token comment"># Replace the current population by the offspring</span>
        population<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> offspring <span class="token comment"># 一代结束，更新种群</span>

        <span class="token comment"># Append the current generation statistics to the logbook </span>
        record <span class="token operator">=</span> stats<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>population<span class="token punctuation">)</span> <span class="token keyword">if</span> stats <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment"># 计算当前一代的统计信息</span>
        logbook<span class="token punctuation">.</span>record<span class="token punctuation">(</span>gen<span class="token operator">=</span>gen<span class="token punctuation">,</span> nevals<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>invalid_ind<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">**</span>record<span class="token punctuation">)</span> <span class="token comment"># 记录当前一代的统计信息</span>
        <span class="token keyword">if</span> verbose<span class="token punctuation">:</span> <span class="token comment"># 这里就是在打印标题头下面的信息了</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>logbook<span class="token punctuation">.</span>stream<span class="token punctuation">)</span>

    <span class="token keyword">return</span> population<span class="token punctuation">,</span> logbook <span class="token comment"># 返回最终种群和Logbook类对象</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>计算机技术</category>
      </categories>
      <tags>
        <tag>遗传算法</tag>
        <tag>Deap</tag>
      </tags>
  </entry>
  <entry>
    <title>整数规划课程笔记（孙小玲教授主讲）</title>
    <url>/2025/06/01/%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0%EF%BC%88%E5%AD%99%E5%B0%8F%E7%8E%B2%E6%95%99%E6%8E%88%E4%B8%BB%E8%AE%B2%EF%BC%89/</url>
    <content><![CDATA[
]]></content>
      <categories>
        <category>数学建模与运筹学</category>
      </categories>
      <tags>
        <tag>整数规划</tag>
      </tags>
  </entry>
  <entry>
    <title>海大的四季</title>
    <url>/2025/05/05/%E6%B5%B7%E5%A4%A7%E7%9A%84%E5%9B%9B%E5%AD%A3/</url>
    <content><![CDATA[<div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">
    <div class="gallery-items">[{"url":"https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/海大的四季/海大1.jpg","alt":"","title":""},{"url":"https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/海大的四季/海大2.jpg","alt":"","title":""},{"url":"https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/海大的四季/海大3.jpg","alt":"","title":""},{"url":"https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/海大的四季/海大4.jpg","alt":"","title":""},{"url":"https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/海大的四季/海大5.jpg","alt":"","title":""},{"url":"https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/海大的四季/海大6.jpg","alt":"","title":""}]</div>
  </div>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>大连海事大学</tag>
        <tag>景象照</tag>
      </tags>
  </entry>
  <entry>
    <title>科研指南</title>
    <url>/2025/05/17/%E7%A7%91%E7%A0%94%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="如何做好文献阅读及笔记整理">如何做好文献阅读及笔记整理</h1>
<p>阅读文献有什么用？必须得先想清楚这个问题读文献才能有动力。简单讲读文献有四个方面的好处：（1）帮助我们快速了解课题背景；（2）帮助我们把握课题研究方向；（3）从中学习课题设计思路；（4）提升自己的逻辑写作能力。</p>
<table>
<tr>
<td>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/科研指南/1.png" weight="50%" height="50%">
Fig1. 读文献的好处
</center>
</td>
<td>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/科研指南/2.png" weight="50%" height="50%">
Fig2. 不同目的下文献的推荐阅读内容
</center>
</td>
</tr>
</table>
<div class="admonition info">
<p class="admonition-title">
推荐工具
</p>
<ol>
<li>
Stork文献鸟： 定期通过邮箱获取指定领域的文献。
</li>
<li>
Connected Papers：输入文章名，获取与之相关论文的知识图谱。其中，论文越新颜色越深，引用度越高圆圈越
大，论文之间的联系越强连线越黑。还可以通过Prior Works找到领域的开门作，通过Derivative Works找到该
领域的研究综述，了解领域的新进展。
</li>
</ol>
</div>
<p>那在阅读完文献之后应该怎么做文献阅读笔记呢？<del><font color="red">如果不做笔记，读完就忘了…</font></del>首先得明确做文献笔记是给自己看的，不是给别人看的，不应该机械的勾画和抄写文献的内容，应该注入自己的理解（<font color="green">强迫自己总结</font>）。</p>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/科研指南/3.png" weight="50%" height="50%">
Fig3. 论文阅读笔记模板
</center>
<h1 id="基于obsidian和zotero搭建文献阅读和笔记环境">基于Obsidian和Zotero搭建文献阅读和笔记环境</h1>
<p>Zotero是一个文献管理工具，它的工作原理和hexo对博客的管理很像，对应的概念叫做条目，通过给条目赋予category和tag属性实现文献的管理。一个条目可以包含很多附件，如对应的pdf文件和笔记。Zotero的工作流简单来说就是用浏览器插件Zotero connector抓取文献条目（必须在文献详情页抓取，不要在打开的pdf阅读页抓取，不然抓不到文献的元数据，有时候只能抓到文献元数据但抓不到pdf，可以在zotero中手动添加），抓完之后用zotero阅读并标注pdf，导出zotero文献数据库，使用citations插件生成对应md模板，用obsidan写文献笔记。</p>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/科研指南/6.webp" weight="50%" height="50%">
Fig4. 文献详情页
</center>
<div class="admonition info">
<p class="admonition-title">
所需下载的插件及其功能汇总
</p>
<ul>
<li>
茉莉花（zotero）： 支持中文文献元数据的解析。
</li>
<li>
better biblatex（zotero）： 将zotero所维护的数据按指定格式导出，这里选择better Biblatex格式并始终保持该文件的更新，及文库发生任何改变该导出文件都会发生相应的更新。
</li>
<li>
zotfile（zotero）：使用zotero内置pdf阅读器做标记可以直接转换为笔记，但如果用其它阅读器做标记又想生成笔记就得使用zotfile插件做提取。<font color="red">zotfile现在不更新了，不支持zotero7…</font>
</li>
<li>
citations（obsidian）：解析通过better biblatex导出的数据，生成指定模板下的markdown文件。
</li>
<li>
dataview（obsidian）：这个插件很强大，它可以看成是一个excel表格，数据的来源是你markdown文件中的frontmatter，主要是用来排序和筛选特定文献。
</li>
</ul>
</div>
<p>此外，Zotero还可以和Word联动，快速插入引用和参考文献。<font color="blue">在一个word文档中首次插入引用会让你选择引文格式，例如中文文献一般就用GB格式，如果不小心选错了doucument performance按键重新选择！</font></p>
<table>
<tr>
<td>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/科研指南/8.png" width="50%" height="50%">
Fig5. 选择引文格式
</center>
</td>
<td>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/科研指南/9.png">
Fig6. 快速添加引文和参考文献
</center>
</td>
</tr>
</table>
<h1 id="和咱专业相关的期刊">和咱专业相关的期刊</h1>
<ul>
<li>Transportation Research A~E：A关注交通政策、规划、经济和管理问题；B侧重交通建模、优化和理论方法；<br>
C聚焦智能交通系统（ITS）、大数据、自动驾驶等新兴技术； D研究交通与环境、可持续发展的交叉领域；E物流、供应链管理和运输经济方向。<br>
</li>
<li>Transportation Science (TS)：INFORMS（Institute for Operations Research and the Management Sciences）旗下顶级期刊，关注运筹学、优化和交通系统分析。<br>
</li>
<li>Operations Research (OR)：INFORMS旗下旗舰期刊，涵盖优化、随机模型、算法设计、博弈论等核心方向。<br>
</li>
<li>European Journal of Operational Research (EJOR)：EJOR（European Journal of Operational Research）是运筹学（OR）和管理科学（MS）领域的国际顶级期刊，由欧洲运筹学协会（EURO）主办，Elsevier出版。它涵盖了运筹学理论、方法及其在商业、工程、政府等领域的应用，是学术界和工业界广泛认可的高影响力期刊。<br>
</li>
<li>Informs Journal on Computing (IJOC or JOC)：由INFORMS（运筹学与管理科学研究所）出版。它聚焦于算法设计、计算优化、机器学习与运筹学的结合，是理论计算与工程应用并重的高水平期刊。<br>
</li>
<li>IEEE Transactions on Intelligent Transportation Systems (T-ITS)：聚焦智能交通技术的应用与创新。</li>
<li>Computers &amp; Operations Research (COR)：运筹学（OR）与计算科学交叉应用领域的国际权威期刊，由 Elsevier 出版，专注于算法开发、优化建模、决策支持系统及工业应用。</li>
<li>Computers &amp; Industrial Engineering (CIE)：工业工程（IE）与计算机应用交叉领域 的重要国际期刊，由 Elsevier 出版，专注于 智能制造、生产系统优化、供应链管理、数据驱动决策 等方向。<br>
</li>
<li>交通运输工程学报</li>
<li>交通运输系统工程与信息</li>
</ul>
<div class="admonition info">
<p class="admonition-title">
EI、SCI和影响因子是什么东西
</p>
<p>
EI（Engineering Index）和SCI（Science Citation Index）可以理解成两个数据库，在被这两个数据库搜录的期刊上发的文章就叫EI、SCI论文。影响因子（IF）是根据期刊发文量和被引用数计算出来的，一个期刊IF越大就越顶。
</p>
</div>
<div class="admonition info">
<p class="admonition-title">
开源期刊和闭源期刊的区别
</p>
<p>
开源期刊（OA，Open Access）和闭源期刊（非OA，Non Open Access）在访问方式、费用、审稿速度、文章质量等方面存在显著差异。开源期刊是指将学术信息放在互联网上供所有人免费访问，不需要考虑版权或注册的限制。作者需要支付版面费，但读者可以免费获取全文。闭源期刊是指作者发表文章不用支付版面费，读者通过购买出版物或支付订阅费获取资源信息。如果急需发表、可报销版面费、希望文章广泛传播和引用频次高，开源期刊是较好的选择。如果时间充裕，且重视学术领域评价，闭源期刊更为适合。一般来说闭源期刊的含金量高一些，尽量法闭源期刊，实在发不出来可以权衡利弊发开源。
</p>
</div>
<h1 id="论文中的技术路线图">论文中的技术路线图</h1>
<div class="admonition info">
<p class="admonition-title">
利用ppt绘制论文中的技术路线图的技术要领
</p>
<ul>
<li>
不要采取文本框和形状拼凑的方式，效率很低，文本框本身就可以对边框进行设置。推荐在形状格式的大小与属性栏中设置对齐方式为中部居中、根据文字调整形状大小、自动换行。
</li>
<li>
箭头采用锚点链接，多使用对齐工具进行调整。
</li>
</ul>
</div>
<h1 id="参考资料">参考资料</h1>
<ol type="1">
<li><a href="https://www.bilibili.com/video/BV17W4y167SM">如何做好文献阅读及笔记整理</a></li>
<li><a href="https://help.ivysci.com/guide/#chapter-ke-yan-shu-ju-shou">研飞科研指南</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/639325772">Obsidian+Zotero打造最强科研工具链</a></li>
<li><a href="https://www.bilibili.com/video/BV1xM4y137q9">Zotero，OB不能没有它(PART1)</a></li>
<li><a href="https://www.bilibili.com/video/BV1E64y187er">Zotero，OB不能没有它(PART2)</a></li>
<li><a href="https://www.bilibili.com/video/BV1m341127aU">Zotero，OB不能没有它(PART3)</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/162939630">Zotero管理文献的机制——分类和标签</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/159828951">Zotero添加条目的三种方式</a></li>
<li><a href="https://gitee.com/zotero-chinese/zotero-chinese/issues/I56D62">Zotero使用 CNKI 时抓取条目报错解决方法</a></li>
<li><a href="https://clashforwindows.org/">外文文献搜索——Clash科学上网篇</a></li>
<li><a href="https://www.bilibili.com/video/BV1HZ4y1b7MJ">ppt绘制论文技术路线图</a></li>
</ol>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>科研方法论</tag>
        <tag>研究生生涯规划</tag>
      </tags>
  </entry>
  <entry>
    <title>读研规划</title>
    <url>/2025/05/27/%E8%AF%BB%E7%A0%94%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="ab85182c8661c942574a11216c5c138dfe2a5d31c5c6ac0bdfde38126af00ecd">2791a93a43004e3f66ae2791aab842499acc2705225a94f8c50462219ac7e42bf19671629d26b07bd4be951affc379aae75902c9e1229c9b5b3a90c2dbb260b8dfb776c7896812f4514e05fc3315dbc6a1f6f291a1dc05f029348bda16107e5cd76c006f3edb8a0ebbcf9cb39def60800bde247fd77e95f622d4adab1fec712efb888219b73a2fe7a1c25de1da247dba844bd9123f8a479de858f6ff28e36edd19865a9658cc5d40a5bb13176ec4227d37387f58eaa426c5ad81a3b7de12d4475833534a9e6909043f0c97f2a8a069a044fc41ee0423850e45ce46fb2f541ce468b5cd777f4a6ce29d6547ef922206c47794eb48db1372f666b7361a8255056eb23ce7c07b9350de8d550dd655fe8e5010aaafbe35c58c8b79aa1b643d6b38c150f54a21b787c8e4e0383a34c5ae217030bb79a952b0ac287d9106532a7405e6d4fec35307220477c55240d37af9b16c4606e7528a476f6b2a35f293251d88c6369dad268f6b596ad4fe52e13919b8743c80543fff43cb5c1fa481eac7ec83bf9fd9649b95d743d8fa2312348faf1c861e901d05abde250dc79a66f29ebb54fa849c1d2747717da14c7e157ceba8e687e2e68020090d6d681171b8d21623585bef7f7fd8ae30b6f587a9470bc7ae2c5909c58d806b87990f62e4a146fc0b49be975f29e0adb951b50b3d12f1247c5d0837e410555c45e00f8ba28fc42e04e3094d37b6a215e2b2fa79204be2751899de7e4362e8c188c97cf761ccab14a9688221902ede36fcb2037a60fe541f720641514f962e2ca72cd3531bf77330d0ee6b52e1ed19dc90e0a651278e1d088e54570b2e3ffa2b297e7e3dc0be793541e218eb728bd492330e7141dec9804377c5e9b183236ffda557f34605b045cea0ff67ff5c57a77eea1bae93774b97e5763c2e50962bfc5aef3527bc01e9c71ad044169617f62e24b374602455232b67ff58be0b0bf23777648468fc2c0e65b85e120b33aac18436e0cc8d70640c2ec43282e671dd6106af9063320188a5e8cf696d7b0b2ed6e628845894fc9469453863bd0f575f02ea9938173be59c69c41e6689986114ca2c9f5cf41ec0fbf3ce11d0393c4c55d7ecaf31232d6cc4e592110ce23fabfa8228346262dfeafb58270ecc1ced69c024c1073ac10efc322d0f246471615da9d5205fdcb2698943f4fab140f40b0f97312108877553bdd6d662c3f60103aa20f24da4397f5afb17ed3dde7c5e1439a24d067e4b6a8afd9b6209b42847290f4831ceed897a60681e7c7ce35c97b73dbb6847e736b13fa59f44b4e47def27561dc693bdff6fbfa95917754cc7e59b3ab5984f8d2824e970c9bf3fa8056259a2f76f66eb44874536cbca3b3df521e4a5958c3ec23a8df048342977ba4b76e30536610decf7c623dbdc2de86a0c96dfcf2308ea70f0ded4b0a276327206bd3a8c1175ecb511930a916c06fd73a89183a125a8d692b0b860291cd445efe697b980c75985b9d7b7ce2d559bbd176a96714e8fc6ac416f2cec4f68aca3a141f97e540b6e9f65ea47c4049274644dc4271ba946bbcd0f6ead1d48c55f757069d26a7632f461babee69b8fea57a6b6d9322a38c63bd347ca8002dbfac5a5088dd5c5acff20aa5fe742115010c58f8f2e65e609088cd712b6582d30bfcdd9f05f7fd881e647ecc4e1e50932baea1ae85febedc9a93142b91b22b4b00e9c5d4ab8d71894ec0f5e8a39fff397e946567e26a03f703f2f23962163cd9b3a0f1ffab4ec9ac928ed832706a5101061de2dc620f6bfc465e85d1751aa22de28c8f1d0be4796cb4bd943bef827cd4093f1ceea75a11a</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击这里输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>个人规划</tag>
      </tags>
  </entry>
  <entry>
    <title>Git工具</title>
    <url>/2025/05/18/Git%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>版本控制产品非常的多，现在影响力最大且使用最广泛的是Git与SVN，其中Git属于分布式版本控制器而SVN属于集中式版本控制器。对于分布式版本控制器，每台工作的电脑都有版本库，而集中式版本控制器的版本库放在一个中央服务器上。分布式版本控制器很安全，不用担心中央服务器崩掉后版本库就没了。</p>
<h1 id="git环境配置">Git环境配置</h1>
<p>windows直接去官网下载就行了，装完之后唯一需要配置的就是用户名和邮箱，因为git是分布式版本控制，每台电脑都得有相应的标识。使用下面的git命令完成配置。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name xxx
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>git仓库包括四个工作区域——working directory（工作目录）、stage（暂存区）、local repository（本地仓库）、remote repository（远程仓库）。使用如下的命令可以将当前所处文件夹转换成git仓库（不包含remote repository）。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个文件夹的结构如下图所示，其中stage（暂存区）、local repository（本地仓库）位于隐藏子文件夹.git内。</p>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/Git工具/1.webp" weight="50%" height="50%">
Fig1. Git仓库的结构
</center>
<p>使用如下命令将git仓库和一个远程仓库关联起来，这里以gitee为例。要使用gitee提供的远程仓库，首先要配置ssh，使用如下命令获得ssh公钥。</p>
<pre class="line-numbers language-bash" data-language="bash"><div class="caption"><span>在gitee配置ssh公钥</span></div><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token comment"># 获取</span>
<span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@gitee.com <span class="token comment"># 检查是否配置成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>把公钥告诉gitee，之后gitee就允许你用git命令进行操作了。注意，这个操作只需要做一次！！！不是每次都要配置一遍公钥！！！</p>
</blockquote>
<p>然后再gitee上面新建一个远程仓库，就可以使用下面的命令将git仓库和这个远程仓库关联起来了。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin 要链接的那个远程仓库的ssh 
<span class="token function">git</span> pull origin master --allow-unrelated-histories
<span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<div class="admonition info">
<p class="admonition-title">
需要注意的点
</p>
<ul>
<li>
命令中的origin是这个远程仓库的别名，命名为origin是一种习惯，不是强制要求。
</li>
<li>
不加-u参数只是将local repository中的内容推送到远程，加上-u则会额外进行关联操作，关联之后再推送就可以不加-u参数了，直接写成git push origin master
</li>
<li>
如果连接错了仓库了，使用<code>git remote rm &lt;仓库别名&gt;</code>删除该连接
</li>
<li>
master是git默认的主分支。当前push的分支必须和远程分支相对应，不然会报错，push不上去
</li>
</ul>
</div>
<p>上面说的是先初始化一个git仓库再和远程仓库进行关联，还有一种方法可以直接得到和远程仓库关联的git仓库，这种方法就是先创建远程仓库，再克隆到本地，使用如下命令。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone 仓库的ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>到此为止，我们已经顺利得到一个包含四个工作区域的git仓库了！下面讲一下如何在四个工作区域之间传递（如下图）以及git中文件的4中状态。</p>
<ul>
<li>untracked：一个新创建的文件，没有被add。</li>
<li>unmodified：文件已经在（local）repository了且对应work directory中的文件没有发生修改。</li>
<li>modified：文件已经在（local）repository了且对应work directory中的文件发生了修改。</li>
<li>staged：暂存状态，放在stage（index）区的文件，等待被一次性commit到（local）repository。</li>
</ul>
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/Git工具/2.webp" weight="50%" height="50%">
Fig2. 文件各种状态的转换
</center>
<h1 id="git分支管理工作流">Git分支管理工作流</h1>
<p>git对分支进行管理速度非常快，因为它实际上管理的是指针。其中Head指针用于确定当前所处分支，“分支名”指针用于确定当前所处分支的最新提交。各个分支之间可以认为是平行宇宙，互不影响（在A分支下创建新分支B之初，A和B的working directory是完全相同的，不需要再粘贴复制一遍文件，完全通过指针实现，但是新建文件并commit到B分支后，A的working directory就是没有这个文件的，就此分叉了）。</p>
<center>
<p><img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/Git工具/3.webp" weight="50%" height="50%"></p>
Fig3. 文件各种状态的转换
</center>
<p>既然是平行宇宙，下面考虑这样一种情况——如果A和B分支commit了一个叫test.txt的文本文件，但是二者内容并不相同，此时想将B合并到A分支，会发生什么呢？会报错！发生冲突。虽然报错了，但是我们还是会得到一个“合并的”test.txt文件，只不过这个文件内被git使用特定符号进行标注了，告知我们哪里发生了冲突。要想解决冲突，就得手动修改“合并的”这个test文件。然后再提交。</p>
<p>最后是多人协作的一般流程</p>
<ol type="1">
<li>首先，可以尝试用<code>git push origin &lt;branch-name&gt;</code>推送自己的修改；</li>
<li>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并，如果<code>git pull</code>提示<code>no tracking information</code>，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream-to &lt;branch-name&gt; origin/&lt;branch-name&gt;</code>；</li>
<li>如果合并有冲突，则解决冲突，并在本地提交；</li>
<li>没有冲突或者解决掉冲突后，再用<code>git push origin &lt;branch-name&gt;</code>推送就能成功！</li>
</ol>
<h1 id="常用bash命令和git命令">常用bash命令和git命令</h1>
<ul>
<li><code>D：</code>:切换到D磁盘。</li>
<li><code>cd</code>：打印当前所在目录。</li>
<li><code>cd d1\e1</code>：切换到当前磁盘下的d11目录。</li>
<li><code>cd ..</code>：回退到当前磁盘下的上一级目录。</li>
<li><code>dir</code>：列出当前目录下的所有文件。</li>
<li><code>mkdir dd</code>：当前所在目录下创建名为dd的目录。</li>
<li><code>rmdir dd</code>：当前所在目录下删除名为dd的目录。</li>
<li><code>type nul&gt;123.txt</code>：当前所在目录下创建名为123的txt文件。</li>
<li><code>del 123.txt</code>：删除当前所在目录下名为123的txt文件。</li>
<li><code>move 源文件路径 新目录路径</code>：移动文件。</li>
<li><code>cls</code>: clear screen。</li>
<li><code>git init</code>：将一个文件夹初始化为git仓库（不含remote repository）。</li>
<li><code>git status</code>：查询git仓库当前状态。</li>
<li><code>git add .</code>：将所有文件的修改放到stage区等待commit。</li>
<li><code>git add filename</code>：将filename指定的文件修改放到stage区等待commit后进入local repository。</li>
<li><code>git rm filename</code>：将filename指定的文件修改放到stage区等待commit后彻底移除。</li>
<li><code>git commit -m “里面写此次修改的提示信息”</code>：将stage区的修改提交到（local）repository。</li>
<li><code>git checkout -- filename</code>：使用（local）repository中对应filename的文件覆盖带掉work directory中的，用于撤销修改。</li>
<li><code>git diff filename</code>：查看还没有add到stage区的名为filename的文件和（local）repository中对应文件的区别。</li>
<li><code>git log --pretty=oneline</code>：查看历次版本信息和版本号。</li>
<li><code>git reset --hard 版本号</code>：将（local）repository回退到指定版本号。</li>
<li><code>git reflog</code>：查看历史信息，用于当从版本3跳到版本1，又想在找到版本3的版本号从而回跳到版本3。</li>
<li><code>git remote add 远程库别名 要链接的那个远程仓库的ssh</code> ：添加一个远程链接。</li>
<li><code>git pull 远程库别名 分支名</code>：将指定远程库的指定分支抓取下来和local repository中的内容合并。</li>
<li><code>git push 远程库别名 分支名</code>：将本地分支（注意和远程仓库分支的对应）推送到远程库，如果远程库没有该分支则进行创建。</li>
<li><code>git clone 要链接的那个远程仓库的ssh</code>：将一个远程仓库克隆到本地并建立链接。</li>
<li><code>git branch</code>：列举处所有分支。</li>
<li><code>git branch -m 新分支名</code>：重新命名当前分支。</li>
<li><code>git branch 分支名</code>：创建分支。</li>
<li><code>git branch -d 分支名</code>：删除分支。</li>
<li><code>git switch 分支名</code>：切换到指定分支。</li>
<li><code>git switch -c 分支名</code>：创建再切换分支。</li>
<li><code>git merge 分支名</code>：将指定分支合并到当前分支。</li>
<li><code>git log --graph</code>：git 仓库历史变化图。</li>
</ul>
]]></content>
      <categories>
        <category>计算机技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>子回路消除约束</title>
    <url>/2025/05/17/%E5%AD%90%E5%9B%9E%E8%B7%AF%E6%B6%88%E9%99%A4%E7%BA%A6%E6%9D%9F/</url>
    <content><![CDATA[<h1 id="什么是子回路">什么是子回路</h1>
在不同的问题中子回路的定义略有不同，例如在TSP中子回路是不包含所有节点的闭环，而在VRP中则是指起点和终点都不是depot的环，如图（B）所示。尽管定义有所不同，但是他们消除子回路的方式是相同的。本文介绍两种最常见的子环路消除约束：MTZ和DFJ约束。
<center>
<img src="https://raw.gitmirror.com/YuanshengShe/YuanshengShe.github.io/main/images/子回路消除约束/1.webp">
</center>
<h1 id="dfj约束">DFJ约束</h1>
<h2 id="dfj约束的原理">DFJ约束的原理</h2>
<p>DFJ约束来源于一个非常直观的认识，即对于任意一个子回路来说，一定满足该回路中所包含的弧的数量等于该回路中所包含的点的数量，其中<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.459ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 645 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g></svg></mjx-container></span>表示的是这个子环路中所包含的点的集合，它是图中所有点的集合<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.74ex" height="1.595ex" role="img" focusable="false" viewBox="0 -683 769 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g></g></svg></mjx-container></span>的一个真子集。</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.047ex;" xmlns="http://www.w3.org/2000/svg" width="44.241ex" height="5.226ex" role="img" focusable="false" viewBox="0 -1404.9 19554.6 2309.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,454.9)"><g data-mml-node="mtd"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(136.2,-1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1012,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g><g data-mml-node="munder" transform="translate(1610.7,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(112.5,-1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1079,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g><g data-mml-node="msub" transform="translate(3221.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4689.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(5745.2,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mo" transform="translate(6946.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mstyle" transform="translate(7224.2,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(8390.8,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></g><g data-mml-node="mi" transform="translate(8946.8,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(9869.6,0)"><path data-c="2282" d="M84 250Q84 372 166 450T360 539Q361 539 370 539T395 539T430 540T475 540T524 540H679Q694 532 694 520Q694 511 681 501L522 500H470H441Q366 500 338 496T266 472Q244 461 224 446T179 404T139 337T124 250V245Q124 157 185 89Q244 25 328 7Q348 2 366 2T522 0H681Q694 -10 694 -20Q694 -32 679 -40H526Q510 -40 480 -40T434 -41Q350 -41 289 -25T172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(10925.4,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(11694.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(12139.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(12916.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mrow" transform="translate(13972.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mo" transform="translate(15451.4,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mrow" transform="translate(16507.2,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(1047,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mo" transform="translate(18054.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(19054.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></g></svg></mjx-container></span></p>
<p>于是，想要破除子回路，我们只需要破坏上述条件就可以了，这样就得到了DFJ约束。</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.047ex;" xmlns="http://www.w3.org/2000/svg" width="48.138ex" height="5.226ex" role="img" focusable="false" viewBox="0 -1404.9 21277.1 2309.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,454.9)"><g data-mml-node="mtd"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(136.2,-1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1012,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g><g data-mml-node="munder" transform="translate(1610.7,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(112.5,-1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1079,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g><g data-mml-node="msub" transform="translate(3221.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4689.4,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mrow" transform="translate(5745.2,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mo" transform="translate(7168.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(8168.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8668.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mstyle" transform="translate(8946.6,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(10113.3,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></g><g data-mml-node="mi" transform="translate(10669.3,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(11592.1,0)"><path data-c="2282" d="M84 250Q84 372 166 450T360 539Q361 539 370 539T395 539T430 540T475 540T524 540H679Q694 532 694 520Q694 511 681 501L522 500H470H441Q366 500 338 496T266 472Q244 461 224 446T179 404T139 337T124 250V245Q124 157 185 89Q244 25 328 7Q348 2 366 2T522 0H681Q694 -10 694 -20Q694 -32 679 -40H526Q510 -40 480 -40T434 -41Q350 -41 289 -25T172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(12647.8,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(13416.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(13861.5,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(14639.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mrow" transform="translate(15695.1,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mo" transform="translate(17173.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mrow" transform="translate(18229.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(1047,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mo" transform="translate(19776.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(20777.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></g></svg></mjx-container></span></p>
<blockquote>
<p>注：这里为什么有<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="12.88ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 5693.1 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(777.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mrow" transform="translate(1833.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mo" transform="translate(3312.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mrow" transform="translate(4368.1,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(1047,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></g></svg></mjx-container></span>，因为只有<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.459ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 645 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g></svg></mjx-container></span>只有一个点的话是绝对不可能形成子回路的，而当<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="7.474ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 3303.6 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(922.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(1978.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(1047,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></g></svg></mjx-container></span>时，<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.459ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 645 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g></svg></mjx-container></span>实际上就是<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.74ex" height="1.595ex" role="img" focusable="false" viewBox="0 -683 769 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g></g></svg></mjx-container></span>，这个时候满足<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.972ex;" xmlns="http://www.w3.org/2000/svg" width="19.744ex" height="2.669ex" role="img" focusable="false" viewBox="0 -750 8726.9 1179.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1012,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g><g data-mml-node="munder" transform="translate(2477.3,0)"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1079,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g></g></g><g data-mml-node="msub" transform="translate(5002.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6470.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(7525.9,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mo" transform="translate(923,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></g></svg></mjx-container></span>的就是我们想要刻画的那个回路，当然不能删掉了。</p>
</blockquote>
<h2 id="dfj约束的实现">DFJ约束的实现</h2>
<p>我们知道任何一个集合的真子集个数为<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.176ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 2729.7 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1229.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2229.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></span>个，所以DFJ约束是一个指数数量级的约束，想要在建模初期就把所有的DFJ约束全部写出来时非常不现实的。在实现上我们一般是将它作为惰性约束处理，在求解过程中通过一定的方法逐步加入。以VRP问题中设置DFJ约束为例，首先我们要设计一个子回路的检测算法，将所有子回路检测出来，然后再设计一个回调函数，根据我们检测到的子回路添加惰性约束。</p>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>子回路检测算法</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">findAllSubroutes</span><span class="token punctuation">(</span>solution<span class="token punctuation">:</span>ndarray<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>Dict<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">,</span>List<span class="token punctuation">[</span>List<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
	route_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment"># subtours of each car</span>
	<span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>solution<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		subtour_kcars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># subtours of car k</span>
		<span class="token comment"># check subtours of car k </span>
		<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>solution<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			flag <span class="token operator">=</span> <span class="token boolean">False</span> 
			subtour_kcars_start_i <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># subtours of car k that starts from point i </span>
			<span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>solution<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
				<span class="token comment"># car k moved from point i to j</span>
				<span class="token keyword">if</span> solution<span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>k<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0.9</span><span class="token punctuation">:</span>
					subtour_kcars_start_i<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
					subtour_kcars_start_i<span class="token punctuation">.</span>append<span class="token punctuation">(</span>j<span class="token punctuation">)</span>
					current_point <span class="token operator">=</span> j 
					<span class="token comment"># cheack whether i-&gt;j formed a subtour</span>
					<span class="token keyword">while</span> <span class="token keyword">not</span> flag<span class="token punctuation">:</span>
						<span class="token keyword">for</span> next_point <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>solution<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
							<span class="token keyword">if</span> solution<span class="token punctuation">[</span>current_point<span class="token punctuation">,</span>next_point<span class="token punctuation">,</span>k<span class="token punctuation">]</span> <span class="token operator">&gt;</span>  <span class="token number">0.9</span><span class="token punctuation">:</span>
								subtour_kcars_start_i<span class="token punctuation">.</span>append<span class="token punctuation">(</span>next_point<span class="token punctuation">)</span>
								current_point <span class="token operator">=</span> next_point
							<span class="token comment"># we find a subtour start from ponstallint i</span>
							<span class="token keyword">if</span> subtour_kcars_start_i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> subtour_kcars_start_i<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
								flag <span class="token operator">=</span> <span class="token boolean">True</span>
								subtour_kcars<span class="token punctuation">.</span>append<span class="token punctuation">(</span>subtour_kcars_start_i<span class="token punctuation">)</span>
								<span class="token keyword">break</span>
							<span class="token comment"># car k finally arrived point (solution.shape[2]-1) means i-&gt;j didn't form a subtour</span>
							<span class="token keyword">if</span> current_point <span class="token operator">==</span> solution<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
								flag <span class="token operator">=</span> <span class="token boolean">True</span>
								<span class="token keyword">break</span>
				<span class="token keyword">else</span><span class="token punctuation">:</span>
					<span class="token keyword">continue</span>
		route_dict<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> subtour_kcars
	<span class="token keyword">return</span> route_dict<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>回调函数</span></div><code class="language-python"><span class="token keyword">def</span> <span class="token function">generateDFJConstraint</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span>where<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token comment"># each time when gurobi find a feasible solution,we check whether we should add some DFJ constraints</span>
	<span class="token keyword">if</span> where <span class="token operator">==</span>  GRB<span class="token punctuation">.</span>Callback<span class="token punctuation">.</span>MIPSOL<span class="token punctuation">:</span>
		solution <span class="token operator">=</span> zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>_data<span class="token punctuation">.</span>V<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>_data<span class="token punctuation">.</span>V<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>_data<span class="token punctuation">.</span>K<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># save the solution results in matrix format</span>
		<span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> x<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
			idx1<span class="token punctuation">,</span>idx2<span class="token punctuation">,</span>idx3 <span class="token operator">=</span> key
			solution<span class="token punctuation">[</span>idx1<span class="token punctuation">,</span>idx2<span class="token punctuation">,</span>idx3<span class="token punctuation">]</span> <span class="token operator">=</span> _model<span class="token punctuation">.</span>cbGetSolution<span class="token punctuation">(</span>value<span class="token punctuation">)</span>
		route_dict <span class="token operator">=</span> findAllSubroutes<span class="token punctuation">(</span>solution<span class="token punctuation">)</span> <span class="token comment"># 找到当前解对应的所有子回路</span>
		<span class="token keyword">for</span> k <span class="token keyword">in</span> _data<span class="token punctuation">.</span>K<span class="token punctuation">:</span>
			<span class="token keyword">for</span> subtour_kcars_start_i <span class="token keyword">in</span> route_dict<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">:</span>
				<span class="token comment"># Now we get the set S(subtour_kcars_start_i[:-1])</span>
				_model<span class="token punctuation">.</span>cbLazy<span class="token punctuation">(</span>
					quicksum<span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>k<span class="token punctuation">]</span> <span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> _data<span class="token punctuation">.</span>A <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> subtour_kcars_start_i<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">and</span> j <span class="token keyword">in</span> subtour_kcars_start_i<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
					<span class="token operator">&lt;=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>subtour_kcars_start_i<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>
					<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="mtz约束">MTZ约束</h1>
<p>MTZ约束我觉得是一个更加巧妙的消除子回路的方法，并且实现上非常简单。它消除子回路的思想是：赋予每个节点一个变量<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.104ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 930 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container></span>，恰当的定义变量<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.104ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 930 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container></span>的含义，使得该变量取值随着节点的访问次序单调增加或单调减小。例如，我们假设<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.542ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2449.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mo" transform="translate(985,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1429.7,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(1949.7,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g></svg></mjx-container></span>是基地及其复制点，<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.531ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2444.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mn" transform="translate(500,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1000,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1444.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(1944.7,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g></svg></mjx-container></span>是网络中的卸货港，那么<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex;" xmlns="http://www.w3.org/2000/svg" width="10.432ex" height="1.561ex" role="img" focusable="false" viewBox="0 -666 4611.1 690"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(777.8,0)"><path data-c="21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></g><g data-mml-node="mn" transform="translate(2055.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(2833.3,0)"><path data-c="21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></g><g data-mml-node="mn" transform="translate(4111.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></span>就是一条子回路，在当前定义下<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.352ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 1039.6 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container></span>应该大于<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.352ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 1039.6 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container></span>同时又小于<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.352ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 1039.6 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container></span>，这显然是矛盾的，从而这样的环路就被排除掉了。而对于我们预期的环路<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex;" xmlns="http://www.w3.org/2000/svg" width="15.094ex" height="1.624ex" role="img" focusable="false" viewBox="0 -694 6671.7 718"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mo" transform="translate(762.8,0)"><path data-c="21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></g><g data-mml-node="mn" transform="translate(2040.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2818.3,0)"><path data-c="21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></g><g data-mml-node="mn" transform="translate(4096.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(4873.9,0)"><path data-c="21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></g><g data-mml-node="mi" transform="translate(6151.7,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container></span>则完全满足MTZ约束而不会被排除。一种典型形式的MTZ约束是将<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.104ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 930 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container></span>定义为节点的访问次序，于是MTZ约束可以使用下式表示。</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.616ex;" xmlns="http://www.w3.org/2000/svg" width="28.594ex" height="2.363ex" role="img" focusable="false" viewBox="0 -772.1 12638.6 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,22.1)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1152.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(2152.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2874.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(3874.8,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5129.9,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(6185.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(6685.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mstyle" transform="translate(6963.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(8130.4,0)"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></g><g data-mml-node="mo" transform="translate(8686.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(9075.4,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(9420.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(9865.1,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(10277.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10943.8,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(11888.6,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></g></g></g></svg></mjx-container></span></p>
<blockquote>
<p>注：MTZ约束非常多非常多，关键看你怎么定义变量的含义。</p>
</blockquote>
]]></content>
      <categories>
        <category>数学建模与运筹学</category>
      </categories>
      <tags>
        <tag>TSP</tag>
        <tag>VRP</tag>
      </tags>
  </entry>
</search>
